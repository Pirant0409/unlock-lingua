from flask import Flask, jsonify, request
from flask_sqlalchemy import SQLAlchemy

app = Flask(__name__)

# Configuration de la base de données
app.config['SQLALCHEMY_DATABASE_URI'] = 'mysql://u602119779_antoi:*1udazPbC@sql713.main-hosting.eu:3306/u602119779_lesmarostin'
app.config['SQLALCHEMY_TRACK_MODIFICATIONS'] = False

# Initialisation de l'extension SQLAlchemy
db = SQLAlchemy(app)

# Définition des modèles de base de données
class Cours(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    name = db.Column(db.String(100), nullable=False)
    teacher = db.Column(db.String(100), nullable=False)


class Word(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    allword = db.Column(db.String(100), nullable=False)
    heure = db.Column(db.String(100), nullable=False)
    cours_name = db.Column(db.String(100), db.ForeignKey('cours.name'), nullable=False)

# Définition des routes
@app.route('/create_cours', methods=['POST'])
def create_cours():
    data = request.get_json()
    new_cours = Cours(name=data['name'], teacher=data['teacher'])
    db.session.add(new_cours)
    db.session.commit()
    return jsonify({'message': 'Cours created successfully'})

@app.route('/create_word', methods=['POST'])
def create_word():
    data = request.get_json()
    cours = Cours.query.filter_by(name=data['cours_name']).first()
    if not cours:
        return jsonify({'error': 'Cours not found'}), 404
    new_word = Word(allword=data['allword'], date=data['date'], heure=data['heure'], cours_name=data['cours_name'])
    db.session.add(new_word)
    db.session.commit()
    return jsonify({'message': 'Word created successfully'})

@app.route('/get_cours', methods=['GET'])
def get_cours():
    cours = Cours.query.all()
    cours_list = []
    for c in cours:
        cours_list.append({'id': c.id, 'name': c.name, 'teacher': c.teacher})
    return jsonify({'cours': cours_list})

@app.route('/get_word', methods=['GET'])
def get_word():
    word = Word.query.all()
    word_list = []
    for w in word:
        word_list.append({'id': w.id, 'allword': w.allword, 'date': w.date, 'heure': w.heure, 'cours_name': w.cours_name})
    return jsonify({'word': word_list})

if __name__ == '__main__':
    app.run(debug=True)